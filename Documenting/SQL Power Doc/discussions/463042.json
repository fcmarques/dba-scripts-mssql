[
  {
    "Id": "1110229",
    "ThreadId": "463042",
    "Html": "Get-WindowsInventoryToClixml.ps1 will write an XML file but Get-SqlServerInventoryToClixml.ps1 fails to produce one.  The log file is written in -DirectoryPath that I choose but no XML file.  Any suggestions?<br />\n",
    "PostedDate": "2013-10-21T13:30:42.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110240",
    "ThreadId": "463042",
    "Html": "Actually I just did another scan against two systems and the XML file was produced.<br />\n",
    "PostedDate": "2013-10-21T14:01:24.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110241",
    "ThreadId": "463042",
    "Html": "Hi Bill,\r<br />\nDoes the log file from Get-SqlServerInventoryToClixml.ps1 indicate that any SQL Server services were found and successfully scanned?\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-21T14:01:32.987-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110251",
    "ThreadId": "463042",
    "Html": "The log file found the SQL services originally.  The XML files are being created now.  The current issue now is converting to Excel.  I run this command against the .gz file --&gt;  .\\Convert-WindowsInventoryClixmlToExcel.ps1 -FromPath &quot;C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\logs\\SQL Server Inventory - 2013-10-21-14-16.xml.gz&quot; -ColorTheme Metro -ColorScheme Dark\r<br />\n<br />\nThis is the error I'm getting now:\r<br />\n<br />\nImport-Clixml : Data at the root level is invalid. Line 1, position 1.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Convert-WindowsInventoryClixmlToExcel.ps1:170 char:1<br />\n<ul>\n<li>Import-Clixml -Path $FromPath | ForEach-Object {</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n<ul>\n<li>CategoryInfo          : NotSpecified: (:) [Import-Clixml], XmlException</li>\n<li>\nFullyQualifiedErrorId : System.Xml.XmlException,Microsoft.PowerShell.Commands.ImportClixmlCommand<br />\n</li>\n</ul>\n</li>\n</ul>\n",
    "PostedDate": "2013-10-21T14:22:16.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110252",
    "ThreadId": "463042",
    "Html": "oh and thanks for the quick response.  This looks like an awesome tool when I get it working properly in our environment (600 servers)<br />\n",
    "PostedDate": "2013-10-21T14:22:55.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110254",
    "ThreadId": "463042",
    "Html": "Hi Bill,\r<br />\nThat error looks like the .GZ file may not have been completely written. Did the log file show &quot;End Script:&quot; as the very last line? This was just for 2 servers, correct?\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-21T14:26:09.793-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110257",
    "ThreadId": "463042",
    "Html": "I am currently just leveraging it against one server because the second test server wouldn't work for some reason even though it does have MSSQLSERVER service running.  Yes, End Script is the last line.   Here is the end of log:\r<br />\n<br />\n2013-10-21 14:30:23.8530 ? Scanned PAOMDB at IP address 10.11.86.205 with 0 errors\r<br />\n2013-10-21 14:30:24.1338 ? Machine scan complete (Success: 1; Failure: 0)\r<br />\n2013-10-21 14:30:24.1650 ? Writing Inventory to disk\r<br />\n2013-10-21 14:30:25.1322 ? End Script: C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Get-SqlServerInventoryToClixml.ps1<br />\n",
    "PostedDate": "2013-10-21T14:33:04.43-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110261",
    "ThreadId": "463042",
    "Html": "Hmm, if you hit the &quot;End Script&quot; line then the GZ file should have been completely written. Any chance the GZ file is blocked? (Right Click -&gt; Properties, on the general tab you'd see an &quot;Unblock&quot; button if the file is blocked)\r<br />\n<br />\nHow big is the GZ file?\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-21T14:37:54.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110262",
    "ThreadId": "463042",
    "Html": "There is no option for Block/Unblock like the modules.  The file is 187KB.  I can see the XML when I open the archive then the XML file.  Again thanks for the rapid response.  <br />\n",
    "PostedDate": "2013-10-21T14:40:51.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110269",
    "ThreadId": "463042",
    "Html": "What OS are you running where you're trying to convert the GZ file to Excel Workbooks?\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-21T14:55:37.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110270",
    "ThreadId": "463042",
    "Html": "Win7 Pro x64 with Office 2007.  The Convert-WindowsInventoryClixmlToExcel.ps1 works flawlessly.<br />\n",
    "PostedDate": "2013-10-21T14:58:44.133-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110272",
    "ThreadId": "463042",
    "Html": "Sorry Kendal, was using the wrong command.  Everything appears to be working now.  Thanks for your assistance!!!<br />\n",
    "PostedDate": "2013-10-21T15:02:34.793-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110274",
    "ThreadId": "463042",
    "Html": ".<br />\n",
    "PostedDate": "2013-10-21T15:05:40.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110275",
    "ThreadId": "463042",
    "Html": "Kendal,  Ignore my last. I got it working. Is there any way to not have the Windows inventory scan when doing the SQL inventory?  Thanks.  -Bill        <br />\n",
    "PostedDate": "2013-10-21T15:05:53.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110662",
    "ThreadId": "463042",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Kendal,</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Is there any way to exclude the Windows scanning portion of\r\n</span><span style=\"font-size:11.0pt; font-family:\">Get-SqlServerInventoryToClixml.ps1? I am scanning a /24 subnet and the SQL inventory completes but when the Windows inventory initiates it crashes. Thanks for all of your help.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">-Bill</span><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #E1E1E1 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:11.0pt; font-family:\"></span></b></p>\r\n</div>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2013-10-22T09:30:42.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110727",
    "ThreadId": "463042",
    "Html": "Bill,\r<br />\nGlad that you got the syntax figured out. In troubleshooting I found another problem introduced with PowerShell 4.0 so it's a win either way. :-)\r<br />\n<br />\nI should be up front in saying that I've never run SQL Power Doc against hundreds of instances, though I have run the Windows inventory piece alone against several hundred machines and it worked fine. If you don't mind being patient, I'd suggest scaling up the number of instances you scan until you find a breaking point...and then I can help figure out how to get around that if you do.\r<br />\n<br />\nAs for disabling the Windows Inventory scan, did you say that you could run a Windows Inventory only against the same machines and it worked? When it runs as part of the SQL Server inventory what specifically happens when it crashes? Is there an error written to the log?\r<br />\n<br />\nThere's nothing in SQL Power Doc to skip over performing a Windows Inventory right now, but if you want to manually circumvent it then delete or comment out lines 1382-1427 of SqlServerInventory.psm1. \r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-22T12:00:59.177-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110768",
    "ThreadId": "463042",
    "Html": "Thanks Kendal.  I commented out the Windows Inventory code in SqlServerInventory.psm1 for now.  Will test the SQL scan for now as this is my current priority.  The log doesn't really say anything about the crash.  The Windows inventory locks up about 51 servers into the scan (out of 170 servers on the subnet).  I'll post more when I find out what might be happening.  <br />\n",
    "PostedDate": "2013-10-22T13:20:32.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110770",
    "ThreadId": "463042",
    "Html": "The appearance of locking up <em>could</em> be due to a hung WMI call against one of the machines that's being scanned - I've seen it happen before. To figure out which machines are currently being scanned I've used Resource Monitor to watch all the network connections in &amp; out and, in parallel with looking at the log entries, I can see which machine things are hanging on.\r<br />\n<br />\nWhen I've run into this in the past it's been something along the lines of a CPU pegged at 100% that made the WMI calls slow to a snail's pace.\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-22T13:25:39.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1110830",
    "ThreadId": "463042",
    "Html": "That appears to be the cause for some of the servers that were being scanned.  It took about two hours to scan one /24 subnet for SQL.  Windows appeared to be hanging but I just left it and the XML file finally appeared.   It looked like most of the time was taken up writing the XML file.  I had the Resource Monitor up the whole time and CPU was maxed with Memory swapping to disk after being maxed out.  The XML file ended up being 53MB!  I'm converting to Excel now.  I love the &quot;Go get a coffee, this can take a few minutes...&quot; message you log to the console!  In this case it will probably take an hour.  :)   I can't wait to see the first successful results with almost 200 servers in the Excel file.   I'll keep you posted as this will be an on going project.  Thanks for all of your help.<br />\n",
    "PostedDate": "2013-10-22T16:42:23.583-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1111059",
    "ThreadId": "463042",
    "Html": "Admittedly, PowerShell can be a bit heavy (especially on memory). I've noticed that writing the XML takes a while, too (due to the speed of serializing the PowerShell objects representing the servers to the GZ XML). I'm looking into ways to make that part faster...but for now I can add a message to the status window that indicates the XML is being written to disk and to go get (another) cup of coffee. :-)\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-23T06:56:15.207-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1111139",
    "ThreadId": "463042",
    "Html": "It created the XML file but converting to Excel gives an empty file.  The XML file is probably too big.  I'm breaking the servers up into smaller pieces by domains.  We have 10 domains so this shouldn't be too bad.  Is there a way to scan by Active Directory OU's?  One of the domains we have has about 20 OU's and some of them we don't have permission to access and scan.<br />\n\r<br />\nI just scanned 14 computers and it only took about 5 minutes.  When I convert the GZ file to Excel the file shows up with the SQL inventory but some of the pieces are missing as the script throws errors.  Is this because I commented out  comment out lines 1382-1427 of SqlServerInventory.psm1? Again thanks for responding to fast.  Here are the errors:\r<br />\n<br />\nPS C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell&gt; C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\ConvertToExcel.ps1\r<br />\nRemove-Variable : Cannot find a variable with name 'HasDatabaseFile'.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Modules\\SqlServerInventory\\SqlServerInventory.psm1:4165 char:3<br />\n<ul>\n<li>Remove-Variable -Name NullDatabaseName, HasDatabaseFile, CanGrowLargerThanDriv ...</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n<ul>\n<li>CategoryInfo          : ObjectNotFound: (HasDatabaseFile:String) [Remove-Variable], ItemNotFoundException</li>\n<li>\nFullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.RemoveVariableCommand<br />\n</li>\n</ul>\n</li>\n</ul>\nRemove-Variable : Cannot find a variable with name 'CanGrowLargerThanDriveFreeSpace'.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Modules\\SqlServerInventory\\SqlServerInventory.psm1:4165 char:3<br />\n<ul>\n<li>Remove-Variable -Name NullDatabaseName, HasDatabaseFile, CanGrowLargerThanDriv ...</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n<ul>\n<li>CategoryInfo          : ObjectNotFound: (CanGrowLargerThanDriveFreeSpace:String) [Remove-Variable], ItemNotFoundException</li>\n<li>\nFullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.RemoveVariableCommand<br />\n</li>\n</ul>\n</li>\n</ul>\nRemove-Variable : Cannot find a variable with name 'AllFileGrowthPotentialKB'.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Modules\\SqlServerInventory\\SqlServerInventory.psm1:4165 char:3<br />\n<ul>\n<li>Remove-Variable -Name NullDatabaseName, HasDatabaseFile, CanGrowLargerThanDriv ...</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n<ul>\n<li>CategoryInfo          : ObjectNotFound: (AllFileGrowthPotentialKB:String) [Remove-Variable], ItemNotFoundException</li>\n<li>\nFullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.RemoveVariableCommand<br />\n</li>\n</ul>\n</li>\n</ul>\nRemove-Variable : Cannot find a variable with name 'AssessmentPriority'.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Modules\\SqlServerInventory\\SqlServerInventory.psm1:4165 char:3<br />\n<ul>\n<li>Remove-Variable -Name NullDatabaseName, HasDatabaseFile, CanGrowLargerThanDriv ...</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />\n<ul>\n<li>CategoryInfo          : ObjectNotFound: (AssessmentPriority:String) [Remove-Variable], ItemNotFoundException</li>\n<li>\nFullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.RemoveVariableCommand<br />\n</li>\n</ul>\n</li>\n</ul>\nExport-WindowsInventoryToExcel : Cannot bind argument to parameter 'WindowsInventory' because it is null.\r<br />\nAt C:\\Users\\ad-johnstw1\\Documents\\WindowsPowerShell\\Modules\\SqlServerInventory\\SqlServerInventory.psm1:4442 char:52<br />\n<ul>\n<li>Export-WindowsInventoryToExcel -WindowsInventory $SqlServerInventory.WindowsIn ...</li>\n<li>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<ul>\n<li>CategoryInfo          : InvalidData: (:) [Export-WindowsInventoryToExcel], ParameterBindingValidationException</li>\n<li>FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Export-WindowsInventoryToExcel</li>\n</ul>\n</li>\n</ul>\n",
    "PostedDate": "2013-10-23T08:48:03.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1112757",
    "ThreadId": "463042",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Status report. Started the script on Thursday morning against 500 servers. It found 241 SQL instances. On Sunday afternoon it’s still running. I’m watching Resource Monitor. 94-100% Used Physical Memory. Commit=12GB,\r\n Working Set=5GB, Private=5GB. This is going to be interesting to see how long it will take to finish. It will be worth it though when the Excel files appear.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #E1E1E1 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:11.0pt; font-family:\"></span></b></p>\r\n</div>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2013-10-27T12:56:24.84-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1113613",
    "ThreadId": "463042",
    "Html": "Hi Bill,\r<br />\nDid the script ever finish? Curious how long it took...\r<br />\n<br />\nKendal<br />\n",
    "PostedDate": "2013-10-29T05:59:15.72-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1113747",
    "ThreadId": "463042",
    "Html": "yes, it finished yesterday at around 12PM.  I started the script at 10AM on 10/24 and it finished at 12PM on 10/28.  The convert to Excel crashed halfway through but did create the SQL Server Inventory-Database Engine Config.xslx file.  The SQL Server Inventory-CM-Database Engine Assessment.xslx file was not created.  All in all it's a nice script.  I just need a more &quot;powerful&quot; computer.  :)  <br />\n",
    "PostedDate": "2013-10-29T09:50:42.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1114600",
    "ThreadId": "463042",
    "Html": "Bill....wow! Ideally you should be able to run this on something that doesn't require massive amounts of CPU or RAM.\r<br />\n<br />\nI've had looking into alternate storage methods for the output on my to-do list for a while now. You've made the perfect case for revisiting that task sooner than later.\r<br />\n<br />\n--Kendal<br />\n",
    "PostedDate": "2013-10-30T14:59:18.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1122385",
    "ThreadId": "463042",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Kendal,</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Yes, it appears that most of the time is taken up with creating XML file. Thanks.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">-Bill</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #E1E1E1 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:11.0pt; font-family:\"></span></b></p>\r\n</div>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2013-11-12T07:23:21.31-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]