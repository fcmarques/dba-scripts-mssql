--This procedure  backs the log up from the Source Server and pushes it to the Target Server
--USAGE EXEC TESTE_LOG_SHIPING_TARGET.DBO.SP_LogShiprecover <'DBNAME'>,  '<NETWORKSHARE>\LogShip.TRN', ' <NETWORKSHARE> /Y'
	--@DBNAME SYSNAME,  - <'DBNAME'>
	--@LOGLOCATION VARCHAR(100), -  '<NETWORKSHARE>\LogShip.TRN'
	--@LOGARCHIVE VARCHAR (50) - ' <NETWORKSHARE> /Y'
----------------------------------*/
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

ALTER PROCEDURE DBO.SP_LogShipRecover
		@DBNAME SYSNAME,
		@LOGLOCATION VARCHAR(200),
		@LOGARCHIVE VARCHAR (200)
AS
DECLARE 
	@SQL VARCHAR (500)
--Apply Transaction LOG and Recover Database
RESTORE LOG @DBNAME FROM DISK = @LOGLOCATION WITH RECOVERY
--ARCHIVE LOG FILE ON TARGET
 SELECT @SQL = 'xcopy ' + @LOGLOCATION + @LOGARCHIVE
 EXEC master.dbo.xp_cmdshell @SQL
--Delete Existing File
SELECT @SQL = 'DEL ' + @LOGLOCATION
EXEC master.dbo.xp_cmdshell @SQL

SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO


----------------------------------*/
/* TEST FOR STEP 3
--APPLY LAST LOG BACKED UP AND COPY IT TO TARGET DB THEN RESTORE IT AND ARCHIVE IT TO ARCHIVE LOCATION
ALTER DATABASE TESTE_LOG_SHIPING_TARGET SET SINGLE_USER WITH ROLLBACK IMMEDIATE
EXEC DBO.SP_LogShipRecover 
	TESTE_LOG_SHIPING_TARGET,  
	'D:\Projetos\Campinas\LOG_SHIPPING\TARGETLOGSHARE\BackUpLog_TESTE_LOG_SHIPING_SOURCE_20071213125804.TRN', 
	' D:\Projetos\Campinas\LOG_SHIPPING\SOURCEARCHIVE\ /Y'
ALTER DATABASE TESTE_LOG_SHIPING_TARGET SET MULTI_USER
 GO
*/
/*---------------------------------*/
